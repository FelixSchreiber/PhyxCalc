# Grammatik-Regeln (kontextfrei, epsilonfrei, sonst allgemein)
# ------------------------------------------------------------
# Regeln müssen bezüglich der Rückgabewerte gruppiert sein!
# Nichtterminierte Symbole in Normklammern z.B. |A|
# Terminierte Symbole außerhalb der Normklammern
# Linksseitige Symbole ohne Klammern vor dem =
# Spezialsymbole (positive Zahlen in Normklammern) sind:
# (alle ab 3 dürfen nur als einziges Symbol in einer Regel vorkommen)
# |0| Anfangs- und Endsymbol (automatisch!)
# |1| Abschnitt aus terminierten Symbolen (automatisch!)
# |2| N.N. (Groß-/Kleinschreibung)
# |3| String in Anführungszeichen ""
# |4| Folge von Leerzeichen
# |5| Folge von Ziffern
# |6| Variable
# |7| Zeichenfolge für neue Variable
# |8| terminiertes Symbol |
# |9| si-Präfix
# |10| 2-Stelliger si-Präfix (nämlich da = Deka)
# |11| Einheit
# |12| SI-Einheit
# |13| Folge von mindestens einer Ziffer mit Basis bis 36, klein
# |14| Folge von mindestens einer Ziffer mit Basis bis 36, groß
# |15| Einzelne Ziffer 0-9
# |16| Offset-Einheit
#
# Z=
#
# Definition needs following outline:
#   Rule        |   functions               |   param function  |   parameter
S=|p0|          ; outputVariable
p0=|p1|
p1=|p1|+|p1|    ; unitCheckConvertible, valueAdd
p1=|p1|-|p1|    ; unitCheckConvertible, valueSub
p1=|p2|
p1=|p3|
p1=|p4|
p2=|p2|*|p2|    ; unitMul, valueMul
p2=|p2|/|p2|    ; unitDiv, valueDiv
p2=|p3|
p2=|p4|
p3=|p3|^|p3|        ; unitPow, valuePow
p3=sin(|p0|)        ; unitCheckDimensionless, valueSin
p3=arcsin(|p0|)     ; unitCheckDimensionless, valueArcsin
p3=cos(|p0|)        ; unitCheckDimensionless, valueCos
p3=arccos(|p0|)     ; unitCheckDimensionless, valueArccos
p3=tan(|p0|)        ; unitCheckDimensionless, valueTan
p3=arctan(|p0|)     ; unitCheckDimensionless, valueArctan
p3=sinh(|p0|)       ; unitCheckDimensionless, valueSinh
p3=arcsinh(|p0|)    ; unitCheckDimensionless, valueArcsinh
p3=cosh(|p0|)       ; unitCheckDimensionless, valueCosh
p3=arccosh(|p0|)    ; unitCheckDimensionless, valueArccosh
p3=tanh(|p0|)       ; unitCheckDimensionless, valueTanh
p3=arctanh(|p0|)    ; unitCheckDimensionless, valueArctanh
p3=exp(|p0|)        ; unitCheckDimensionless, valueExp
p3=ln(|p0|)         ; unitCheckDimensionless, valueLn
p3=log|p4|(|p0|)    ; unitCheckDimensionless2, valueLogn
p3=root|p4|(|p0|)   ; unitRoot, valueRoot
p3=sqrt(|p0|)       ; unitSqrt, valueSqrt
p3=abs(|p0|)        ; valueAbs
p3=max(|p0|,|p0|)   ; valueCheckComplex2, unitCheckConvertible, valueMax
p3=min(|p0|,|p0|)   ; valueCheckComplex2, unitCheckConvertible, valueMin
p3=int(|p0|)        ; valueCheckComplex, valueInt
p3=trunc(|p0|)      ; valueCheckComplex, valueTrunc
p3=floor(|p0|)      ; valueCheckComplex, valueFloor
p3=round(|p0|)      ; valueCheckComplex, valueRound
p3=ceil(|p0|)       ; valueCheckComplex, valueCeil
p3=sign(|p0|)       ; valueCheckComplex, valueSign
p3=heaviside(|p0|)  ; valueCheckComplex, valueHeaviside
p3=rand()           ; valueRand
p3=randint()        ; valueRandint
p3=randg(|p0|,|p0|) ; valueCheckComplex2, unitCheckDimensionless2, valueRandg
p3=|p0|!            ; valueCheckComplex, valueCheckPositive, valueCheckInteger, unitCheckDimensionless, valueFaculty
p3=|p4|
p4=(|p0|)
p4=pi               ; valuePi
p4=|var|            ; pushVariable
p4=|variable|       ; bufferParameter, variableLoad
uint=|n|
uint=|n||uint|
uinte=|uint||e||uint|
int=|uint|
int=|+-||uint|
inte=|int||e||int|
real=|int|
real=|int|.|uint|
reale=|real|
reale=|real||e||int|
complex=|reale|
complex=|i||reale|
complex=|reale||i|
complex=|i|
var=|complex||unit|   ; bufferParameter, bufferUnit, bufferValue
var=|complex|         ; bufferParameter, bufferValue
var=|unit|          ; bufferParameter, bufferUnit
+-=+
+-=-
e=e
e=E
i=i
i=j
n=0
n=1
n=2
n=3
n=4
n=5
n=6
n=7
n=8
n=9
